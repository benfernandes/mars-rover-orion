/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
    nodes: {
        Cube008: THREE.Mesh
    }
    materials: {
        ['Default OBJ.005']: THREE.MeshStandardMaterial
    }
}

const ben = new THREE.TextureLoader().load('assets/MarsModel/ben.jfif')
ben.flipY = false
const benMaterial = new THREE.MeshStandardMaterial( { map : ben} )

export default function Mars({ ...props }: JSX.IntrinsicElements['group']) {
    const group = useRef<THREE.Group>()
    const { nodes } = useGLTF('assets/MarsModel/mars.glb') as GLTFResult
    // model is from https://solarsystem.nasa.gov/resources/2372/mars-3d-model/
    return (
        <group ref={group} {...props} dispose={null}>
            <mesh geometry={nodes.Cube008.geometry} material={benMaterial} />
        </group>
    )
}

useGLTF.preload('assets/MarsModel/mars.glb')
